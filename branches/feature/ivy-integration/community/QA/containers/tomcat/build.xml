<project name="tomcat_tc" default="start.tomcat">
  <description>
    Downloads, installs, and boots a tomcat instance with a deployed sample app.
    Use 'ant -Doutput.dir=/abolute/path' to specify a build output directory. Defaults to ./output
    Use 'ant -Dtomcat.port=XXXX' to specify a listen port.  Defaults to 8080.
  </description>

  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="${basedir}/../ant-lib/ant-contrib-1.0b2.jar" />
    </classpath>
  </taskdef>  

  <property name="output.dir" value="${basedir}/output"/>
  <property name="download.dir" value="${basedir}/download"/>
  <property name="tomcat.port" value="8080"/>    
  <!-- 
  <property name="tomcat" value="apache-tomcat-5.5.17"/> 
  -->
  <property name="tomcat" value="jakarta-tomcat-5.0.28"/>
  <property name="tomcat.zip" value="${tomcat}.zip"/>
  <property name="tomcat.dir.orig" value="${output.dir}/${tomcat}"/>
  <property name="tomcat.dir" value="${output.dir}/${tomcat}-${tomcat.port}"/>
  <property name="tc.classes" value="${tc.base}/build"/>
  <property name="tc.config" value="${basedir}/../config/tc-config.xml"/>
  <property name="demoapp.dir" value="${basedir}/../demoapp"/>

  <target name="init">
    <available file="${tc.classes}" property="tc.classes.exists"/>
    <fail unless="tc.classes.exists"/>

    <mkdir dir="${output.dir}"/>
    <available file="${tomcat.dir}" property="tomcat.dir.exists"/>
    <available file="${download.dir}/${tomcat.zip}" property="tomcat.download.exists"/>

    <java fork="true" 
          classpath="${tc.classes}/dso-l1/src.classes" 
          outputproperty="boot.jar.name" 
          failonerror="true" 
          classname="com.tc.object.tools.BootJarSignature"/> 

    <property name="dso.boot.jar" value="${tc.base}/build/homes/tools/${boot.jar.name}"/>

    <available file="${dso.boot.jar}" property="boot.jar.exists"/>

    <if><not><isset property="boot.jar.exists"/></not>
      <then>
        <fail message="DSO boot jar does not exist: ${dso.boot.jar}"/>
      </then>
    </if>
  </target>

  <target name="download.tomcat" unless="tomcat.download.exists">
    <mkdir dir="${download.dir}"/>
    <get src="ftp://ftp:user@sand.terracotta.lan/pub/test-app-servers/${tomcat.zip}" dest="${download.dir}/${tomcat.zip}"/>
  </target>

  <target name="clean" description="Remove the tomcat installation, etc.">
    <delete dir="${output.dir}"/>
  </target>

  <target name="start.tomcat" depends="init, download.tomcat, unpack.tomcat, compile.app, deploy.war"
          description="start a Tomcat server.  Use -Dtomcat.port=XXXX to specify http listen port">

    <if><os family="unix"/>
    <then>
      <property name="catalina" value="catalina.sh"/>
    </then>
    <else>
      <property name="catalina" value="catalina.bat"/>
    </else>
    </if>

    <path id="tc.session.classpath">
      <pathelement location="${tc.classes}/dso-l1-session/src.classes"/>
      <pathelement location="${tc.classes}/dso-l1-tomcat/src.classes"/>
      <pathelement location="${tc.classes}/dso-l1-tomcat50/src.classes"/>
      <pathelement location="${tc.classes}/dso-l1-tomcat55/src.classes"/>
    </path>
    <property name="tc.session.classpath" refid="tc.session.classpath"/>

    <path id="tc.classpath">
      <pathelement location="${tc.classes}/common/src.classes"/>
      <pathelement location="${tc.classes}/dso-l1/src.classes"/>
      <pathelement location="${tc.classes}/dso-l1-jdk15/src.classes"/>
      <pathelement location="${tc.classes}/dso-common-jdk15/src.classes"/>
      <pathelement location="${tc.classes}/dso-common/src.classes"/>
      <pathelement location="${tc.classes}/thirdparty/src.classes"/>
      <pathelement location="${tc.classes}/aspectwerkz/src.classes"/>
      <pathelement location="${tc.classes}/management/src.classes"/>

      <fileset dir="${tc.base}/common/lib">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="${tc.base}/management/lib">
        <include name="*.jar"/>
      </fileset>
    </path>
    <property name="tc.classpath" refid="tc.classpath"/>

    <property name="java_opts" value="-Xbootclasspath/p:${dso.boot.jar} -Dtc.session.classpath=${tc.session.classpath} -Dtc.classpath=${tc.classpath} -Dtc.config=${tc.config} -Dtc.classloader.writeToDisk=true "/>

    <exec executable="hostname" outputproperty="host.name"/>
    <echo message="-------------------------------------------------------------------------"/>
    <echo message="App deployed to: http://${host.name}:${tomcat.port}/simplesession/SimpleSession"/>
    <echo message="-------------------------------------------------------------------------"/>

    <if><isset property="debug"/>
    <then>
      <property name="catalina.target" value="jpda run"/>
    </then>
    <else>
      <property name="catalina.target" value="run"/>      
    </else>
    </if>

    <exec dir="." executable="${tomcat.dir}/bin/${catalina}">
      <env key="CATALINA_HOME" value="${tomcat.dir}"/>
      <env key="JAVA_OPTS" value="${java_opts}"/>
      <env key="JPDA_ADDRESS" value="8000"/>
      <env key="JPDA_TRANSPORT" value="dt_socket"/>
      <arg line="${catalina.target}"/>
    </exec>

  </target>

  <target name="stop.tomcat" depends="init"
          description="Stop a running Tomcat server.">
    <exec dir="." executable="${tomcat.dir}/bin/shutdown.sh" os="Linux, Mac OS X">
      <env key="CATALINA_HOME" value="${tomcat.dir}"/>
    </exec>
    <exec dir="." executable="${tomcat.dir}/bin/shutdown.bat" os="Windows XP">
      <env key="CATALINA_HOME" value="${tomcat.dir}"/>
    </exec>
  </target>


  <target name="unpack.tomcat" unless="tomcat.dir.exists">
    <unjar src="${download.dir}/${tomcat.zip}" dest="${output.dir}"/>
    <replace file="${tomcat.dir.orig}/conf/server.xml" token="8080" value="${tomcat.port}"/>
    <replace file="${tomcat.dir.orig}/conf/server.xml" token="8005" value="1${tomcat.port}"/>
    <chmod dir="${tomcat.dir.orig}/bin" includes="**/*.sh" perm="a+x"/>
    <move todir="${tomcat.dir}">
      <fileset dir="${tomcat.dir.orig}"/>
    </move>
    <delete file="${output.dir}/${tomcat.zip}"/>

  </target>

  <target name="compile.app">
    <mkdir dir="${output.dir}/build"/>
    <javac srcdir="${demoapp.dir}" 
           includes="*.java" 
           destdir="${output.dir}/build"
           classpath="${tomcat.dir}/common/lib/servlet-api.jar"/>
    <war webxml="${demoapp.dir}/web.xml" destfile="${output.dir}/simplesession.war">
      <metainf file="${demoapp.dir}/context.xml"/>
      <classes dir="${output.dir}/build"/>
      <fileset dir="${demoapp.dir}" includes="*.html"/>
      <fileset dir="${demoapp.dir}" includes="*.jsp"/>
    </war>
  </target>

  <target name="deploy.war">
    <delete dir="${tomcat.dir}/webapps/simplesession" />
    <delete file="${tomcat.dir}/conf/Catalina/localhost/simplesession.xml" />
    <copy file="${output.dir}/simplesession.war" todir="${tomcat.dir}/webapps" overwrite="true"/>
  </target>


</project>
