<!--

  All content copyright (c) 2003-2006 Terracotta, Inc.,
  except as may otherwise be noted in a separate copyright notice.
  All rights reserved

-->

<project name="geronimo_tc" default="start">
  <description>
    Downloads, installs, and boots a tomcat instance with a deployed sample app.
    Use 'ant -Doutput.dir=/abolute/path' to specify a build output directory. Defaults to ./output
    Use 'ant -Dtomcat.port=XXXX' to specify a listen port.  Defaults to 8080.
  </description>

  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="${basedir}/../ant-lib/ant-contrib-1.0b2.jar" />
    </classpath>
  </taskdef>  

  <taskdef name="module.classes" classname="com.tc.ant.ModuleClasses"
           classpath="${basedir}/../ant-lib/tc-ant.jar" />
  
  <if><not><isset property="tc.base"/></not>
  <then>
    <property name="base.guess" value="${basedir}/../../../../open/code/base"/>
    <available file="${base.guess}" property="base.exists"/>
    <if><isset property="base.exists"/>
    <then>
      <property name="tc.base" value="${base.guess}"/>
    </then>
    </if>
  </then>
  </if>

  <property name="output.dir" value="${basedir}/output"/>
  <property name="download.dir" value="${basedir}/download"/>
  <!-- <property name="geronimo" value="geronimo-tomcat-j2ee-1.1"/> -->
  <property name="geronimo" value="wasce-1.0.1.2"/>
  <property name="geronimo.zip" value="${geronimo}.zip"/>
  <!-- <property name="geronimo.dir" value="${output.dir}/geronimo-1.1"/> -->
  <property name="geronimo.dir" value="${output.dir}/wasce-1.0.1.2"/>
  <property name="tc.config" value="${basedir}/../config/tc-config.xml"/>
  <property name="demoapp.dir" value="${basedir}/../demoapp"/>

  <module.classes base="${tc.base}" prop="common.classes" module="common"/>
  <module.classes base="${tc.base}" prop="management.classes" module="management"/>
  <module.classes base="${tc.base}" prop="dso-l1.classes" module="dso-l1"/>
  <module.classes base="${tc.base}" prop="dso-common-jdk15.classes" module="dso-common-jdk15"/>
  <module.classes base="${tc.base}" prop="dso-common.classes" module="dso-common"/>
  <module.classes base="${tc.base}" prop="thirdparty.classes" module="thirdparty"/>
  <module.classes base="${tc.base}" prop="aspectwerkz.classes" module="aspectwerkz"/>
  <module.classes base="${tc.base}" prop="dso-l1-session.classes" module="dso-l1-session"/>
  <module.classes base="${tc.base}" prop="dso-l1-tomcat.classes" module="dso-l1-tomcat"/>
  <module.classes base="${tc.base}" prop="dso-l1-tomcat50.classes" module="dso-l1-tomcat50"/>
  <module.classes base="${tc.base}" prop="dso-l1-tomcat55.classes" module="dso-l1-tomcat55"/>

  <path id="tc.classpath">
    <pathelement location="${management.classes}"/>
    <pathelement location="${common.classes}"/>
    <pathelement location="${dso-l1.classes}"/>
    <pathelement location="${dso-common-jdk15.classes}"/>
    <pathelement location="${dso-common.classes}"/>
    <pathelement location="${thirdparty.classes}"/>
    <pathelement location="${aspectwerkz.classes}"/>

    <fileset dir="${tc.base}/common/lib">
      <include name="*.jar"/>
    </fileset>

    <fileset dir="${tc.base}/management/lib">
      <include name="*.jar"/>
    </fileset>
  </path>

  <path id="tc.session.classpath">
    <pathelement location="${dso-l1-tomcat.classes}"/>
    <pathelement location="${dso-l1-tomcat50.classes}"/>
    <pathelement location="${dso-l1-tomcat55.classes}"/>
    <pathelement location="${dso-l1-session.classes}"/>
  </path>

  <property name="tc.classpath" refid="tc.classpath"/>
  <property name="tc.session.classpath" refid="tc.session.classpath"/>

  <target name="init">
    <mkdir dir="${output.dir}"/>
    <available file="${geronimo.dir}" property="geronimo.dir.exists"/>
    <available file="${download.dir}/${geronimo.zip}" property="geronimo.download.exists"/>

    <java fork="true" 
          classpath="${dso-l1.classes}" 
          outputproperty="boot.jar.name" 
          failonerror="true" 
          classname="com.tc.object.tools.BootJarSignature"/> 

    <property name="dso.boot.jar" value="${tc.base}/build/homes/tools/${boot.jar.name}"/>

    <available file="${dso.boot.jar}" property="boot.jar.exists"/>

    <if><not><isset property="boot.jar.exists"/></not>
      <then>
        <fail message="DSO boot jar does not exist: ${dso.boot.jar}"/>
      </then>
    </if>
  </target>

  <target name="download" unless="geronimo.download.exists">
    <mkdir dir="${download.dir}"/>
    <get src="ftp://ftp:user@sand.terracotta.lan/pub/test-app-servers/${geronimo.zip}" dest="${download.dir}/${geronimo.zip}"/>
  </target>

  <target name="clean" description="Remove the installation, etc.">
    <delete dir="${output.dir}"/>
  </target>

  <target name="start" depends="init, download, unpack, compile.app, deploy.war"
          description="start a server">
    <if><os family="unix"/>
    <then>
      <property name="startup" value="geronimo.sh"/>
    </then>
    <else>
      <property name="startup" value="geronimo.bat"/>
    </else>
    </if>

    <property name="java_opts" value="-Xbootclasspath/p:${dso.boot.jar} -Dtc.session.classpath=${tc.session.classpath} -Dtc.classpath=${tc.classpath} -Dtc.config=${tc.config} -Datc.classloader.writeToDisk=true "/>

    <if><isset property="debug"/>
    <then>
      <property name="startup.target" value="jpda run"/>
    </then>
    <else>
      <property name="startup.target" value="run"/>      
    </else>
    </if>

    <exec dir="." executable="${geronimo.dir}/bin/${startup}">
      <env key="GERONIMO_HOME" value="${geronimo.dir}"/>
      <env key="JAVA_OPTS" value="${java_opts}"/>
      <env key="JPDA_ADDRESS" value="8000"/>
      <env key="JPDA_TRANSPORT" value="dt_socket"/>
      <arg line="${startup.target} --long"/>
    </exec>

  </target>

  <target name="stop" depends="init"
          description="Stop a running server.">
    <exec dir="." executable="${geronimo.dir}/bin/shutdown.sh" os="Linux, Mac OS X">
      <env key="GERONIMO_HOME" value="${geronimo.dir}"/>
    </exec>
    <exec dir="." executable="${geronimo.dir}/bin/shutdown.bat" os="Windows XP">
      <env key="GERONIMO_HOME" value="${geronimo.dir}"/>
    </exec>
  </target>


  <target name="unpack" unless="geronimo.dir.exists">
    <unjar src="${download.dir}/${geronimo.zip}" dest="${output.dir}"/>
    <chmod dir="${geronimo.dir}/bin" includes="**/*.sh" perm="a+x"/>
  </target>

  <target name="compile.app">
    <mkdir dir="${output.dir}/build"/>
    <javac srcdir="${demoapp.dir}" 
           includes="*.java" 
           destdir="${output.dir}/build"
           classpath="${demoapp.dir}/lib/servlet-api.jar"/>
    <war webxml="${demoapp.dir}/web.xml" destfile="${output.dir}/simplesession.war">
      <metainf file="${demoapp.dir}/context.xml"/>
      <classes dir="${output.dir}/build"/>
      <fileset dir="${demoapp.dir}" includes="*.html"/>
      <fileset dir="${demoapp.dir}" includes="*.jsp"/>
    </war>
  </target>

  <target name="deploy.war">
    <echo message="DEPLOY THIS!"/>
    <!--     <delete dir="${tomcat.dir}/webapps/simplesession" /> -->
    <!--     <delete file="${tomcat.dir}/conf/Catalina/localhost/simplesession.xml" /> -->
    <!--     <copy file="${output.dir}/simplesession.war" todir="${tomcat.dir}/webapps" overwrite="true"/> -->
  </target>  

</project>
