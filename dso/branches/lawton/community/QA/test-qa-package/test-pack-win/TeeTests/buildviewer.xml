<!--

  All content copyright (c) 2003-2006 Terracotta, Inc.,
  except as may otherwise be noted in a separate copyright notice.
  All rights reserved

-->

<project name="tee_tc" default="prepare_and_run">
   <description>
    Downloads, installs, and boots a tomcat instance with a deployed sample app.
    Use 'ant -Doutput.dir=/abolute/path' to specify a build output directory. Defaults to ./output
    Use 'ant -Dtomcat.port=XXXX' to specify a listen port.  Defaults to 8080.
  </description>

   <taskdef resource="net/sf/antcontrib/antlib.xml">
      <classpath>
         <!--<pathelement location="${basedir}/../../lib/ant/ant-contrib-1.0b2.jar" />--> 
      	<pathelement location="${basedir}/../lib/ant/ant-contrib-1.0b2.jar" />
      </classpath>
   </taskdef>

   <path id="junittest.classpath">
      <pathelement location="${basedir}/client/build" />
      <fileset dir="${basedir}/client/build">         
         <include name="teetest/BasicPackTest.class" />      	 
      	 <include name="teetest/DemoConsoleChatPackTest.class" />
      	 <include name="teetest/DemoJTablePackTest.class" />
      	 <include name="teetest/DemoSharedEditorTest.class" />
      	 <include name="teetest/DemoViewerTest.class" />
      	 <include name="teetest/DemoWebTest.class" />
      	 <include name="teetest/DocsTest.class" />
      	 <include name="teetest/EclipsePackTest.class" />
      	 <include name="teetest/JREPackTest.class" />
      	
      </fileset>
      <pathelement location="${build.classes}" />
   </path>
	
	<!--<property name="tvs.homedir" value="${basedir}/tc2.0.0"/>-->
	<!--<property name="tvs.homedir" value="${basedir}/tc2.0.2"/>-->
	<!--<property name="tvs.homedir" value="${basedir}/tc2.0.1"/>-->
	<property name="tvs.homedir" value="${basedir}/tc2.0.3"/>
	<property name="tvs.server.download" value="sand.terracotta.lan" />
	<!--<property name="build.download.dir" value="/export2/homes/cruise/monkey/changeset-kits/irving" />-->
	<!--<property name="build.download.dir" value="/export2/homes/cruise/monkey/changeset-kits/main" />-->
	<property name="build.download.dir" value="/export2/homes/cruise/monkey/changeset-kits/judah" />
	<property name="tvs.build.name" value="tvs" />
	<property name="tvs.zip" value="${tvs.build.name}.zip" />
	<property name="tvs.targz" value="tvs.tar.gz"/>
	<property name="tvs.tar" value="${tvs.build.name}.tar" />
	<property name="tvs.dir" value="${basedir}/TVS" />
	<property name="client.src" value="${basedir}/client/src" />
	<property name="client.build" value="${basedir}/client/build" />
	<property name="java.dir" value="${basedir}/teetest" />
	<property name="src.dir" value="${client.src}/teetest" />
	<property name="src.consolechatfile" value="${java.dir}/Chatter.java" />
	<property name="consolechat.rundemofile" value="${java.dir}/rundemo.bat" />
	<property name="viewer.tcconfigfile" value="${java.dir}/tc-config.xml" />
	
	<!-- Root folder files -->
	<property name="homedir.value" value="${tvs.homedir}" />		
	
	<!-- Bin folder and files -->
	<property name="bin.dir" value="${tvs.homedir}/bin" />	
	<property name="bindir.value" value="${bin.dir}" />	
	<property name="start-tc-server.value" value="${bin.dir}/start-tc-server.bat" />
	<property name="stop-tc-server.value" value="${bin.dir}/stop-tc-server.bat" />
	<property name="tc-admin.value" value="${bin.dir}/tc-admin.bat"/>
	<property name="tc-version.value" value="${bin.dir}/tc-version.bat"/>		
	
	<!-- Demo folder and files -->
	<property name="demo.dir" value="${tvs.homedir}/demos" />	<!-- for judah -->
	<!--<property name="demo.dir" value="${tvs.homedir}/demo" />-->  <!-- for irving -->
	<property name="demodir.value" value="${demo.dir}"/>	
	<property name="start-demo-server.value" value="${demo.dir}/start-demo-server.bat" />
	<property name="tc-config.value" value="${demo.dir}/tc-config.xml" />	
		
	<!-- Demo/ConsoleChat folder and files -->
	<property name="ConsoleChat.dir" value="${demo.dir}/ConsoleChat" />
	<property name="ConsoleChatdir.value" value="${ConsoleChat.dir}" />
	<property name="Consolesrc.dir" value="${ConsoleChat.dir}/src" />
	<property name="Consolebuild.value" value="${ConsoleChat.dir}/build.bat" />
	<property name="Consolerundemo.value" value="${ConsoleChat.dir}/rundemo.bat" />			
	<!-- Demo/ConsoleChat/src folder and files -->
	<property name="Consolesrcfile.name" value="${Consolesrc.dir}/demo/consolechat" />
	<property name="Consolesrcfile.value" value="${Consolesrcfile.name}" />	
	
	<!-- exec and arguments -->	
	<property name="tvs.host" value="localhost" />
	<property name="tvs.port" value="9520" />
	<property name="taskkill.dir" value="C:/WINDOWS/system32/" />
	<property name="taskkill.name" value="${taskkill.dir}/taskkill.exe" />	
	
	<!-- Demo/jtable folder and files -->
	<property name="jtable.dir" value="${demo.dir}/jtable" />
	<property name="jtabledir.value" value="${jtable.dir}" />
	<property name="jtablesrc.dir" value="${jtable.dir}/src" />
	<property name="jtablebuild.value" value="${jtable.dir}/build.bat" />	
	<property name="jtablerundemo.value" value="${jtable.dir}/rundemo.bat" />	
	<!-- Demo/jtable/src folder and files -->
	<property name="jtablesrcfile.name" value="${jtablesrc.dir}/demo/jtable" />
	<property name="jtablesrcfile.value" value="${jtablesrcfile.name}" />
	
	<!-- Demo/shared Editor folder and files -->
	<property name="sharedEditor.dir" value="${demo.dir}/sharedEditor" />
	<property name="sharedEditordir.value" value="${sharedEditor.dir}" />
	<property name="sharedEditorbuild.value" value="${sharedEditor.dir}/build.bat" />	
	<property name="sharedEditorrundemo.value" value="${sharedEditor.dir}/rundemo.bat" />
	<!-- Demo/sharedEditor/lib folder and files -->
	<property name="sharedEditorlib.dir" value="${sharedEditor.dir}/lib" />
	<property name="sharedEditorlibdir.value" value="${sharedEditorlib.dir}" />
	<!-- Demo/sharedEditor/src folder and files -->
	<property name="sharedEditorsrc.dir" value="${sharedEditor.dir}/src" />
	<property name="sharedEditorsrcdir.value" value="${sharedEditorsrc.dir}" />
	<property name="sharedEditorsrcsubdir.value" value="${sharedEditorsrc.dir}/demo/sharedEditor" />	
	<property name="sharedEditorsrcbeansfile.value" value="${sharedEditorsrcsubdir.value}/beans" />
	<property name="sharedEditorsrcmodelfile.value" value="${sharedEditorsrcsubdir.value}/model" />
	<property name="sharedEditorsrcuifile.value" value="${sharedEditorsrcsubdir.value}/ui" />
	<property name="sharedEditorsrcimgfile.value" value="${sharedEditorsrc.dir}/img" />
	
	<!-- Demo/viewer folder and files -->
	<property name="viewer.dir" value="${demo.dir}/viewer" />
	<property name="viewerdir.value" value="${viewer.dir}" />
	<property name="viewerbuild.value" value="${viewer.dir}/build.bat" />	
	<property name="viewerrundemo.value" value="${viewer.dir}/rundemo.bat" />
	<property name="viewerlib.dir" value="${viewer.dir}/lib" />
	<property name="viewerlibdir.value" value="${viewerlib.dir}" />
	<!-- Demo/viewer/src folder and files -->
	<property name="viewersrc.dir" value="${viewer.dir}/src" />
	<property name="viewersrcdir.value" value="${viewersrc.dir}" />
	<property name="viewersrcfile.value" value="${viewersrc.dir}/demo/viewer" />
	<property name="viewersrcbeansfile.value" value="${viewersrcfile.value}/beans" />
	<property name="viewersrcuifile.value" value="${viewersrcfile.value}/ui" />
	
	<!-- Demo/web folder and files -->
	<property name="web.dir" value="${demo.dir}/web" />
	<property name="webdir.value" value="${web.dir}" />
	<property name="webdemo.dir" value="${web.dir}/demo" />
	<property name="webdemodir.value" value="${webdemo.dir}" />
	<property name="webbuild.value" value="${web.dir}/build.bat" />	
	<property name="webrundemo.value" value="${web.dir}/rundemo.bat" />	
	<property name="weblib.dir" value="${web.dir}/lib" />
	<property name="weblibdir.value" value="${weblib.dir}" />
	<!-- Demo/web/demo/image folder and files -->	
	<property name="webdemoimgfile.value" value="${webdemo.dir}/images" />	
	<!-- Demo/web/src folder and files -->
	<property name="websrc.dir" value="${web.dir}/src" />
	<property name="websrcdir.value" value="${websrc.dir}" />
	<property name="websrcfile.value" value="${websrc.dir}/demo/sharedservlet" />
	<property name="websrcexpfile.value" value="${websrcfile.value}/exception" />		
	
	<!-- Docs folder and files -->
	<property name="docs.dir" value="${tvs.homedir}/docs" />
	<property name="docsdir.value" value="${docs.dir}" />
	
	<!-- Libexec folder and files -->
	<property name="libexec.dir" value="${tvs.homedir}/libexec" />
	<property name="libexecdir.value" value="${libexec.dir}" />		
	
	<!-- sample-config folder and files -->
	<property name="sconfig.dir" value="${tvs.homedir}/sample-config" />
	<property name="sconfigdir.value" value="${sconfig.dir}" />	
	
	<!-- eclipse folder and files -->
	<property name="eclipse.dir" value="${tvs.homedir}/eclipse" />
	<property name="eclipsedir.value" value="${eclipse.dir}" />
	<property name="eclipsecomdir.value" value="${eclipse.dir}/com.terracotta.dso_3.1.1" />	
	<property name="eclipsecomhtmldir.value" value="${eclipsecomdir.value}/html" />
	<property name="eclipsecomhtmlconceptsdir.value" value="${eclipsecomhtmldir.value}/concepts" />
	<property name="eclipsecomhtmlrefdir.value" value="${eclipsecomhtmldir.value}/ref" />
	<property name="eclipsecomhtmlrefdemodir.value" value="${eclipsecomhtmlrefdir.value}/demos" />
	<property name="eclipsecomhtmltasksdir.value" value="${eclipsecomhtmldir.value}/tasks" />
	<property name="eclipsecomhtmltasksconfigdir.value" value="${eclipsecomhtmltasksdir.value}/config" />
	<property name="eclipsecomhtmltasksconfigappdir.value" value="${eclipsecomhtmltasksconfigdir.value}/app" />
	<property name="eclipsecomhtmltasksconfigclientsdir.value" value="${eclipsecomhtmltasksconfigdir.value}/clients" />
	<property name="eclipsecomhtmltasksconfigserversdir.value" value="${eclipsecomhtmltasksconfigdir.value}/servers" />
	<property name="eclipsecomhtmltutorialdir.value" value="${eclipsecomhtmldir.value}/tutorial" />	
	<property name="eclipsecomimgdir.value" value="${eclipsecomdir.value}/images" />
	<property name="eclipsecomimgeclipsedir.value" value="${eclipsecomimgdir.value}/eclipse" />	
	<property name="eclipsecomlibdir.value" value="${eclipsecomdir.value}/lib" />
	<property name="eclipsecomlibdsodir.value" value="${eclipsecomlibdir.value}/dso-boot" />
	<property name="eclipsecomlibtomcatdir.value" value="${eclipsecomlibdir.value}/tomcat" />
	<property name="eclipsecomlibweblogicdir.value" value="${eclipsecomlibdir.value}/weblogic" />	
	<property name="eclipsecommetadir.value" value="${eclipsecomdir.value}/META-INF" />		
	
	<!-- lib folder and files -->
	<property name="lib.dir" value="${tvs.homedir}/lib" />
	<property name="libdir.value" value="${lib.dir}" />
	<property name="libdsodir.value" value="${libdir.value}/dso-boot" />
	<property name="libtomcatdir.value" value="${libdir.value}/tomcat" />	
	<property name="libweblogicdir.value" value="${libdir.value}/weblogic" />	
	
	<!-- jre folder and files -->
	<property name="jre.dir" value="${tvs.homedir}/jre" />
	<property name="jredir.value" value="${jre.dir}" />
	<property name="jrebindir.value" value="${jredir.value}/bin" />
	<property name="jrebinclientdir.value" value="${jrebindir.value}/client" />
	<property name="jrejredir.value" value="${jre.dir}/jre" />
	<property name="jrejrebindir.value" value="${jrejredir.value}/bin" />
	<property name="jrejrebinserverdir.value" value="${jrejrebindir.value}/server" />
	<property name="jrejrelibdir.value" value="${jrejredir.value}/lib" />
	<property name="jrejrelibaudiodir.value" value="${jrejrelibdir.value}/audio" />	
	<property name="jrejrelibcmmdir.value" value="${jrejrelibdir.value}/cmm" />	
	<property name="jrejrelibfontsdir.value" value="${jrejrelibdir.value}/fonts" />
	<property name="jrelibdir.value" value="${jre.dir}/lib" />
	<property name="jrelibaudiodir.value" value="${jrelibdir.value}/audio" />	
	<property name="jrelibcmmdir.value" value="${jrelibdir.value}/cmm" />
	<property name="jrelibextdir.value" value="${jrelibdir.value}/ext" />
	<property name="jrelibfontsdir.value" value="${jrelibdir.value}/fonts" />
	<property name="jrelibi386dir.value" value="${jrelibdir.value}/i386" />	
	<property name="jrelibimdir.value" value="${jrelibdir.value}/im" />
	<property name="jrelibimgdir.value" value="${jrelibdir.value}/images" />
	<property name="jrelibimgcursorsdir.value" value="${jrelibimgdir.value}/cursors" />
	<property name="jrelibjavawdir.value" value="${jrelibdir.value}/javaws" />
	<property name="jrelibmanagdir.value" value="${jrelibdir.value}/management" />
	<property name="jrelibsecurdir.value" value="${jrelibdir.value}/security" />
	<property name="jrelibzidir.value" value="${jrelibdir.value}/zi" />	
	
	<if>
	      <os family="unix" />
	      <then>
	         <property name="tvs.start" value="start-tc-server" />
	         <property name="tvs.stop" value="stop-tc-server" />
	         <property name="dso-boot.jar" value="${tvs.homedir}/lib/dso-boot/dso-boot-hotspot_linux_142.jar"/>
	      </then>
	      <else>
	         <property name="tvs.start" value="start-tc-server.bat" />
	         <property name="tvs.stop" value="stop-tc-server.bat" />
	         <property name="dso-boot.jar" value="${tvs.homedir}/lib/dso-boot/dso-boot-hotspot_win32_150.jar"/>
	         <property name="tvs.win" value="true" />
	      </else>
	</if>
	
	<target name="clean" description="Remove the folders">	      
	      <delete dir="${basedir}/junitreports" />
	      <delete dir="${basedir}/reports" />
	      <delete dir="${basedir}/report" />	      
	      <delete dir="${tvs.homedir}" />
		  <delete dir="${tvs.dir}" />
	   	  <delete dir="${basedir}/client/build" />
		  <delete file="${basedir}/tvs.zip" />		  
		  <delete file="${basedir}/version.txt" />
		  <delete dir="${client.src}" />
		  <delete dir="${basedir}/client" />
		
	</target>
		
    <!-- for running demos-->	
	<target name="prepare_and_run" depends="init, download.tvs, compile_client, deployversion.scripts, viewercompile.app, start.tcadmin, start.tvs, deployviewer.app, deployviewer.app1">
	
		
		<parallel>
			<!-- for running pack test and demos-->
			<sequential> 
				<sleep seconds="30"/>          
				<antcall target="test_and_report" />
			</sequential>
			
		    <!-- for running demos-->
			<sequential>
             <sleep seconds="120"/>
            <antcall target="shutdown_servers" />
        	</sequential>		
		</parallel>
		
	</target>
		
	<target name="init">		      
			  <available file="${tvs.homedir}" property="tvs.homedir.exists" />      
			  <mkdir dir="${basedir}/reports" />
		      <mkdir dir="${basedir}/junitreports" />
		      <mkdir dir="${basedir}/report/html" />
		      <!--<mkdir dir="${tvs.dir}" />-->
		      <mkdir dir="${basedir}/client/build" />
		      <mkdir dir="${basedir}/client/src/teetest" />
		      <copydir src="${java.dir}" dest="${src.dir}"/>
			  <delete file="${src.dir}/Chatter.java" />
	</target>
		
	<target name="download.tvs" unless="tvs.homedir.exists">   	
		 <if><isset property="tvs.win"/>
		<then>
			<sshexec host="${tvs.server.download}"
			    	      	username="cruise"
			    	      	password="cruise"
			    	      	trust="yes"
			    			command="ls -ltr ${build.download.dir}/windows/tc.tee*.zip |awk '$0 !~ /lehman/' | awk '{field=$NF} END {print field}'"
			    	        outputproperty="tvszip" />
			    	        <echo message="********************************************"/>
			    	        <echo message="${tvszip}"/>
			    	        <scp file="cruise:cruise@${tvs.server.download}:${tvszip}"  localTofile="${tvs.zip}" trust="yes"/> 
			    	        <unzip src="${basedir}/${tvs.zip}"  dest="${basedir}"/>
		</then>
		<else>	    	      
			<sshexec host="${tvs.server.download}"
			    	            	username="cruise"
			    	            	password="cruise"
			    	            	trust="yes"
			    	      			command="ls -ltr ${build.download.dir}/linux/*.gz |awk '$0 !~ /lehman/' | awk '{field=$NF} END {print field}'"
			    	                outputproperty="tvs.tar.gz" />
			    	                <echo message="********************************************"/>
			    	                <echo message="${tvs.tar.gz}"/>
			    	       			<scp file="cruise:cruise@${tvs.server.download}:${tvs.tar.gz}"  trust="yes" localTofile="${tvs.targz}"/> 
			    			<gunzip src="${basedir}/${tvs.targz}" dest="${basedir}/${tvs.tar}"/>
			    			<untar src="${basedir}/${tvs.tar}" dest="${basedir}"/>			    
			    			<exec dir="${tvs.dir}" executable="ls" outputproperty="tvs.targz">
			    			</exec>			     			
			    	      	<echo message="TVS downloaded file is:"/>
			     			<echo message="${tvs.targz}"/>			    
		</else>
		</if>
	 </target>
	
	<target name="compile_client">
		      <chmod dir="${client.build}" perm="777" />
		      <javac srcdir="${client.src}" destdir="${client.build}" />
	</target>	
	
	<target name="consolechatcompile.app">
		      <delete dir="${ConsoleChat.dir}/classes" />
		      <copy file="${src.consolechatfile}" todir="${Consolesrcfile.name}" overwrite="true"/>	
		      <copy file="${consolechat.rundemofile}" todir="${ConsoleChat.dir}" overwrite="true"/>
			  <echo message="successfully deleted the folder: ${ConsoleChat.dir}/classes" />
		      <echo message="Compling the console chat app ${ConsoleChat.dir}" />		      
		      <echo message="Starting build.bat: ${Consolebuild.value}" />
		      <exec dir="${ConsoleChat.dir}" executable="${Consolebuild.value}" spawn="true">		         
		      </exec>
	</target>
	
	<target name="jtablecompile.app">
			      <delete dir="${jtable.dir}/classes" />
				  <echo message="successfully deleted the folder: ${jtable.dir}/classes" />
			      <echo message="Compling the jtable app ${jtable.dir}" />		      
			      <echo message="Starting build.bat: ${jtablebuild.value}" />
			      <exec dir="${jtable.dir}" executable="${jtablebuild.value}" spawn="true">		         
			      </exec>
	</target>
	
	<target name="sharedEditorcompile.app">
				   <delete dir="${sharedEditor.dir}/classes" />
				   <echo message="successfully deleted the folder: ${sharedEditor.dir}/classes" />
				   <echo message="Compling the shared Editor app ${sharedEditor.dir}" />		      
				   <echo message="Starting build.bat: ${sharedEditorbuild.value}" />
				   <exec dir="${sharedEditor.dir}" executable="${sharedEditorbuild.value}" spawn="true">		         
				   </exec>
	</target>
	
	<target name="viewercompile.app">
				<delete dir="${viewer.dir}/classes" />
		        <copy file="${viewer.tcconfigfile}" todir="${demo.dir}" overwrite="true"/>
				<echo message="successfully deleted the folder: ${viewer.dir}/classes" />
				<echo message="Compling the viewer app ${viewer.dir}" />		      
				<echo message="Starting build.bat: ${viewerbuild.value}" />
				<exec dir="${viewer.dir}" executable="${viewerbuild.value}" spawn="true">		         
				</exec>
	</target>
	
	<target name="webcompile.app">
			<delete dir="${web.dir}/classes" />
			<echo message="successfully deleted the folder: ${web.dir}/classes" />
			<echo message="Compling the web app ${web.dir}" />		      
			<echo message="Starting build.bat: ${webbuild.value}" />
			<exec dir="${web.dir}" executable="${webbuild.value}" spawn="true">		         
			</exec>
	</target>
	
	<target name="start.tcadmin">
		<echo message="Starting terracotta console by running tc.admin.bat: ${tc-admin.value}" />
		<exec dir="${bin.dir}" executable="${tc-admin.value}" spawn="true">
				
		</exec>		
	</target>
	
	<target name="start.tvs">		    
		 <echo message="Starting TVS server from ${start-demo-server.value}" />
		<chmod file="${start-demo-server.value}" perm="777" />
		 <exec dir="${demo.dir}" executable="${start-demo-server.value}" spawn="true">		 	
		 </exec>
	</target>
	
	<target name="deployconsolechat.app">		    
		<echo message="Starting the demo from ${Consolerundemo.value}" />
		<chmod file="${Consolerundemo.name}" perm="777" />
		<exec dir="${ConsoleChat.dir}" executable="${Consolerundemo.value}" spawn="true">		  
		</exec>
   </target>
	
	<target name="deployconsolechat.app1">		    
			<echo message="Starting the demo from ${Consolerundemo.value}" />
			<chmod file="${Consolerundemo.value}" perm="777" />
			<exec dir="${ConsoleChat.dir}" executable="${Consolerundemo.value}" spawn="true">
			</exec>
		    <!--Note: Modified rundemo.bat with "%*" into "kalai"-->
		    <!--Note: Modified Chatter.java, In class MessageObject, String message = ""; and String username = ""; into String message = "hi"; and String username = "kalai";-->
		  
	</target>
	
	<target name="deployjtable.app">		    
				<echo message="Starting the demo from ${jtablerundemo.value}" />
				<chmod file="${jtablerundemo.value}" perm="777" />
				<exec dir="${jtable.dir}" executable="${jtablerundemo.value}" spawn="true">
				</exec>  
	</target>
	
	<target name="deployjtable.app1">		    
				<echo message="Starting the demo from ${jtablerundemo.value}" />
				<chmod file="${jtablerundemo.value}" perm="777" />
				<exec dir="${jtable.dir}" executable="${jtablerundemo.value}" spawn="true">
				</exec>  
	</target>
	
	<target name="deploysharedEditor.app">		    
					<echo message="Starting the demo from ${sharedEditorrundemo.value}" />
					<chmod file="${sharedEditorrundemo.value}" perm="777" />
					<exec dir="${sharedEditor.dir}" executable="${sharedEditorrundemo.value}" spawn="true">
					</exec>  
	</target>
		
	<target name="deploysharedEditor.app1">		    
		<echo message="Starting the demo from ${sharedEditorrundemo.value}" />
		<chmod file="${sharedEditorrundemo.value}" perm="777" />
		<exec dir="${sharedEditor.dir}" executable="${sharedEditorrundemo.value}" spawn="true">
		</exec>  
	</target>
	
	<target name="deployviewer.app">		    
			<echo message="Change jdbc-enabled to true in the ${tc-config.value}" />		
			<echo message="Uncommented database listener and enter database listener host to test16.terracotta.lan in the ${tc-config.value}" />		
			<echo message="Starting the demo from ${viewerrundemo.value}" />
			<chmod file="${viewerrundemo.value}" perm="777" />
			<exec dir="${viewer.dir}" executable="${viewerrundemo.value}" spawn="true">
				<!--<arg line="test16.terracotta.lan 1521 TESTDB test test 5 5 ntg" />-->
				<arg line="test16.terracotta.lan 1521 TESTDB test test" />
			</exec>  
	</target>
			
	<target name="deployviewer.app1">		    
		    <echo message="Change jdbc-enabled to true in the ${tc-config.value}" />		
			<echo message="Uncommented database listener and enter database listener host to test16.terracotta.lan in the ${tc-config.value}" />
		    <echo message="Starting the demo from ${viewerrundemo.value}" />
			<chmod file="${viewerrundemo.value}" perm="777" />
			<exec dir="${viewer.dir}" executable="${viewerrundemo.value}" spawn="true">
				<!--<arg line="test16.terracotta.lan 1521 TESTDB test test 5 5 ntg" />-->
				<arg line="test16.terracotta.lan 1521 TESTDB test test" />
			</exec>  
	</target>
	
	<target name="deployweb.app">
				<echo message="Starting the demo from ${webrundemo.value}" />
				<chmod file="${webrundemo.value}" perm="777" />
				<exec dir="${web.dir}" executable="${webrundemo.value}" spawn="true">
					<arg line="8051" />
				</exec>  
	</target>
				
		<target name="deployweb.app1">		    
				<echo message="Starting the demo from ${webrundemo.value}" />
				<chmod file="${webrundemo.value}" perm="777" />
				<exec dir="${web.dir}" executable="${webrundemo.value}" spawn="true">
					<arg line="8052" />
				</exec>  
		</target>
	 
		<target name="deployversion.scripts">			
			<echo message="Starting tc version from ${tc-version.value}" />
								<chmod file="${tc-version.value}" perm="777" />
								 <exec dir="${bin.dir}" executable="${tc-version.value}" output="version.txt">
								 	<arg line="-v" />
								 </exec>
		</target>
	
	<target name="test_and_report" depends="run_junit, make_junit_report" />
		
	<target name="run_junit">
		      <junit printsummary="yes" haltonfailure="no" fork="yes">
		         <classpath refid="junittest.classpath" />
		      	<jvmarg value="-Dhomedir.value=${homedir.value}" />		      	
		      	
		      	<jvmarg value="-Dbindir.value=${bindir.value}" />		      	
		      	
		      	<jvmarg value="-Ddemodir.value=${demodir.value}" />
		      			      	
		      	<jvmarg value="-DConsoleChatdir.value=${ConsoleChatdir.value}" />
		      	<jvmarg value="-DConsolesrcfile.value=${Consolesrcfile.value}" />		      	
		      	
		      	<jvmarg value="-Djtabledir.value=${jtabledir.value}" />
		      	<jvmarg value="-Djtablesrcfile.value=${jtablesrcfile.value}" />
		      	
		      	<jvmarg value="-DsharedEditordir.value=${sharedEditordir.value}" />		      	
		      	<jvmarg value="-DsharedEditorlibdir.value=${sharedEditorlibdir.value}" />
		      	<jvmarg value="-DsharedEditorsrcdir.value=${sharedEditorsrcdir.value}" />		      	
		      	<jvmarg value="-DsharedEditorsrcsubdir.value=${sharedEditorsrcsubdir.value}" />
		      	<jvmarg value="-DsharedEditorsrcbeansfile.value=${sharedEditorsrcbeansfile.value}" />
		      	<jvmarg value="-DsharedEditorsrcmodelfile.value=${sharedEditorsrcmodelfile.value}" />
		      	<jvmarg value="-DsharedEditorsrcuifile.value=${sharedEditorsrcuifile.value}" />
		      	<jvmarg value="-DsharedEditorsrcimgfile.value=${sharedEditorsrcimgfile.value}" />
		      		      	
		      	<jvmarg value="-Dviewerdir.value=${viewerdir.value}" />		      	
		      	<jvmarg value="-Dviewerlibdir.value=${viewerlibdir.value}" />
		      	<jvmarg value="-Dviewersrcdir.value=${viewersrcdir.value}" />
		      	<jvmarg value="-Dviewersrcfile.value=${viewersrcfile.value}" />
		      	<jvmarg value="-Dviewersrcbeansfile.value=${viewersrcbeansfile.value}" />
		      	<jvmarg value="-Dviewersrcuifile.value=${viewersrcuifile.value}" />
		      	
		      	<jvmarg value="-Dwebdir.value=${webdir.value}" />		      	
		      	<jvmarg value="-Dwebdemodir.value=${webdemodir.value}" />		      	
		      	<jvmarg value="-Dweblibdir.value=${weblibdir.value}" />
		      	<jvmarg value="-Dwebsrcdir.value=${websrcdir.value}" />		      	
		      	<jvmarg value="-Dwebdemoimgfile.value=${webdemoimgfile.value}" />
		      	<jvmarg value="-Dwebsrcfile.value=${websrcfile.value}" />
		      	<jvmarg value="-Dwebsrcexpfile.value=${websrcexpfile.value}" />		      	
		      	
		      	<jvmarg value="-Ddocsdir.value=${docsdir.value}" />
		      	
		      	<jvmarg value="-Dlibexecdir.value=${libexecdir.value}" />		      	
		      	
		      	<jvmarg value="-Dsconfigdir.value=${sconfigdir.value}" />		      	
		      	
		      	<jvmarg value="-Declipsedir.value=${eclipsedir.value}" />
		      	<jvmarg value="-Declipsecomdir.value=${eclipsecomdir.value}" />		      	
				<jvmarg value="-Declipsecomhtmldir.value=${eclipsecomhtmldir.value}" />
		      	<jvmarg value="-Declipsecomhtmlconceptsdir.value=${eclipsecomhtmlconceptsdir.value}" />
		      	<jvmarg value="-Declipsecomhtmlrefdir.value=${eclipsecomhtmlrefdir.value}" />
		      	<jvmarg value="-Declipsecomhtmlrefdemodir.value=${eclipsecomhtmlrefdemodir.value}" />
		      	<jvmarg value="-Declipsecomhtmltasksdir.value=${eclipsecomhtmltasksdir.value}" />
		      	<jvmarg value="-Declipsecomhtmltasksconfigdir.value=${eclipsecomhtmltasksconfigdir.value}" />
		      	<jvmarg value="-Declipsecomhtmltasksconfigappdir.value=${eclipsecomhtmltasksconfigappdir.value}" />
		      	<jvmarg value="-Declipsecomhtmltasksconfigclientsdir.value=${eclipsecomhtmltasksconfigclientsdir.value}" />
		      	<jvmarg value="-Declipsecomhtmltasksconfigserversdir.value=${eclipsecomhtmltasksconfigserversdir.value}" />
		      	<jvmarg value="-Declipsecomhtmltutorialdir.value=${eclipsecomhtmltutorialdir.value}" />		      	
		      	<jvmarg value="-Declipsecomimgdir.value=${eclipsecomimgdir.value}" />
		      	<jvmarg value="-Declipsecomimgeclipsedir.value=${eclipsecomimgeclipsedir.value}" />		      	
				<jvmarg value="-Declipsecomlibdir.value=${eclipsecomlibdir.value}" />
		      	<jvmarg value="-Declipsecomlibdsodir.value=${eclipsecomlibdsodir.value}" />
		      	<jvmarg value="-Declipsecomlibtomcatdir.value=${eclipsecomlibtomcatdir.value}" />
		      	<jvmarg value="-Declipsecomlibweblogicdir.value=${eclipsecomlibweblogicdir.value}" />		      	
				<jvmarg value="-Declipsecommetadir.value=${eclipsecommetadir.value}" />
		      	
		      	<jvmarg value="-Dlibdir.value=${libdir.value}" />
		      	<jvmarg value="-Dlibdsodir.value=${libdsodir.value}" />
		      	<jvmarg value="-Dlibtomcatdir.value=${libtomcatdir.value}" />		      	
		      	<jvmarg value="-Dlibweblogicdir.value=${libweblogicdir.value}" />		      	
		      	
		      	<jvmarg value="-Djredir.value=${jredir.value}" />
		      	<jvmarg value="-Djrebindir.value=${jrebindir.value}" />
		      	<jvmarg value="-Djrebinclientdir.value=${jrebinclientdir.value}" />
		      	<jvmarg value="-Djrejredir.value=${jrejredir.value}" />
		      	<jvmarg value="-Djrejrebindir.value=${jrejrebindir.value}" />
		      	<jvmarg value="-Djrejrebinserverdir.value=${jrejrebinserverdir.value}" />
		      	<jvmarg value="-Djrejrelibdir.value=${jrejrelibdir.value}" />
		      	<jvmarg value="-Djrejrelibaudiodir.value=${jrejrelibaudiodir.value}" />
		      	<jvmarg value="-Djrejrelibcmmdir.value=${jrejrelibcmmdir.value}" />
		      	<jvmarg value="-Djrejrelibfontsdir.value=${jrejrelibfontsdir.value}" />
		      	<jvmarg value="-Djrelibdir.value=${jrelibdir.value}" />
		      	<jvmarg value="-Djrelibaudiodir.value=${jrelibaudiodir.value}" /> 
		      	<jvmarg value="-Djrelibcmmdir.value=${jrelibcmmdir.value}" />
		      	<jvmarg value="-Djrelibextdir.value=${jrelibextdir.value}" />
		      	<jvmarg value="-Djrelibfontsdir.value=${jrelibfontsdir.value}" />
		      	<jvmarg value="-Djrelibi386dir.value=${jrelibi386dir.value}" />
		      	<jvmarg value="-Djrelibimdir.value=${jrelibimdir.value}" />
		      	<jvmarg value="-Djrelibimgcursorsdir.value=${jrelibimgcursorsdir.value}" />
		      	<jvmarg value="-Djrelibjavawdir.value=${jrelibjavawdir.value}" />
		      	<jvmarg value="-Djrelibmanagdir.value=${jrelibmanagdir.value}" />
		      	<jvmarg value="-Djrelibsecurdir.value=${jrelibsecurdir.value}" />
		      	<jvmarg value="-Djrelibzidir.value=${jrelibzidir.value}" /> 		      	
		      	
		         <formatter type="plain" />
		         <formatter type="xml" />
		         <batchtest todir="./reports">
		            <fileset dir="${client.build}">
		            	<include name="teetest/BasicPackTest.class" />
		            	<include name="teetest/DemoConsoleChatPackTest.class" />
		            	<include name="teetest/DemoJTablePackTest.class" />
		            	<include name="teetest/DemoSharedEditorTest.class" />		            	
		            	<include name="teetest/DemoViewerTest.class" />
		            	<include name="teetest/DemoWebTest.class" />
		            	<include name="teetest/DocsTest.class" />
		            	<include name="teetest/EclipsePackTest.class" />
		            	<include name="teetest/JREPackTest.class" /> 		            	
		            </fileset>
		         </batchtest>
		      </junit>
		</target>
		
		<target name="make_junit_report">
		      <junitreport todir="./junitreports">
		         <fileset dir="${basedir}/reports">
		            <include name="*.xml" />
		         </fileset>

		         <fileset dir="${basedir}/junitreports">
		            <include name="TEST-*.xml" />
		         </fileset>
		         <!--<report format="frames" todir="./report/html"/>-->
		         <report format="noframes" todir="./report/html" />
		      </junitreport>
		</target>
	
	<target name="shutdown_servers" depends="stop.tvs"/>
	<target name="stop.tvs">
      <echo message="Stopping TVS server in ${stop-tc-server.value}" />
      <chmod file="${stop-tc-server.value}" perm="777" />	      
      <exec dir="${bin.dir}" executable="${stop-tc-server.value}">
         <arg line="${tvs.host} ${tvs.port}" />
      </exec>
	  <echo message="closing the tc admin console and Removing all the clients" />
	  <exec dir="${taskkill.dir}" executable="${taskkill.name}">
		         <arg line="/F /IM java.exe" />
	   </exec>		
	</target>	
</project>
   

