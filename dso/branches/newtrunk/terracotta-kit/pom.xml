<?xml version="1.0" encoding="UTF-8"?>
<!-- Apache Maven 2 POM generated by Apache Ivy http://ant.apache.org/ivy/ 
  Apache Ivy version: 2.2.0 20100923230623 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.terracotta</groupId>
    <artifactId>terracotta-parent</artifactId>
    <version>3.6.0-SNAPSHOT</version>
    <relativePath>../terracotta-parent</relativePath>
  </parent>

  <groupId>org.terracotta.internal</groupId>
  <artifactId>terracotta-kit</artifactId>
  <packaging>pom</packaging>
  <name>terracotta-kit</name>
  
  <properties>
    <skip.deploy>true</skip.deploy>
    <skip.testjar>true</skip.testjar>
	  <kit.edition>opensource</kit.edition>
	  <ee.suffix></ee.suffix>
    <packaging>dir</packaging>
    <kit.name>${terracotta.artifactId}-${project.version}</kit.name>
    <rootDir>${project.build.directory}/${kit.name}</rootDir>
    <schema.version>6</schema.version>
    <skip.schema>true</skip.schema>    
    
    <toolkit.api>1.4</toolkit.api>    
    <toolkit.version>4.0.0-SNAPSHOT</toolkit.version>    
    <ehcache.version>2.5.0-SNAPSHOT</ehcache.version>
    <quartz.version>2.1.0-SNAPSHOT</quartz.version>
    <terracotta-session.version>1.2.0-SNAPSHOT</terracotta-session.version>
    <quartz-terracotta.version>2.1.0-SNAPSHOT</quartz-terracotta.version>
    
    <terracotta.artifactId>terracotta${ee.suffix}</terracotta.artifactId>
    <toolkit.artifactId>terracotta-toolkit-${toolkit.api}-runtime${ee.suffix}</toolkit.artifactId>
    <quartz-terracotta.artifactId>quartz-terracotta${ee.suffix}</quartz-terracotta.artifactId>    
	  <ehcache-core.artifactId>ehcache-core</ehcache-core.artifactId>
    <ehcache-terracotta.artifactId>ehcache-terracotta${ee.suffix}</ehcache-terracotta.artifactId>
    
    <ehcache-core.readme.url>http://svn.terracotta.org/svn/forge/projects/terracotta-ehcache/trunk/ehcache-express-kit/src/assemble/README.html</ehcache-core.readme.url>
    <ehcache-core.quickstart.url>http://svn.terracotta.org/svn/forge/projects/terracotta-ehcache/trunk/ehcache-express-kit/src/assemble/QUICK-START.html</ehcache-core.quickstart.url>    
    <ehcache-core.tclicense.url>http://svn.terracotta.org/svn/forge/projects/terracotta-ehcache/trunk/ehcache-express-kit/src/assemble/EHCACHE-TERRACOTTA-LICENSE.txt</ehcache-core.tclicense.url>
    <ehcache-core.tcschema.url>http://svn.terracotta.org/svn/ehcache/trunk/core/src/main/config/ehcache-terracotta.xml</ehcache-core.tcschema.url>
    <quartz-kit.url>http://download.terracotta.org/nightly/quartz/quartz-${quartz.version}.tar.gz</quartz-kit.url>
  </properties>

  <profiles>
    <profile>
	    <id>enterprise</id>
      <properties>
        <kit.edition>enterprise</kit.edition>
        <ee.suffix>-ee</ee.suffix>
        <ehcache-core.artifactId>ehcache-core-ee-kit</ehcache-core.artifactId>
      </properties>
	  </profile>
    <profile>
	    <id>tarball</id>
      <properties>
        <packaging>tarball</packaging>
      </properties>
	  </profile>
    <profile>
      <id>docflex</id>
      <activation>
        <file>
          <exists>${env.DOCFLEX_HOME}</exists>
        </file>
      </activation>
      <properties>
        <skip.schema>false</skip.schema>
      </properties>
    </profile>    
  </profiles>
  
  <dependencies>
    <dependency>
      <groupId>org.terracotta</groupId>
      <artifactId>${terracotta.artifactId}</artifactId>
      <version>${project.version}</version>
    </dependency>
    
    <!-- for packaging purpose -->
    <dependency>
      <groupId>org.terracotta.internal</groupId>
      <artifactId>build-data</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.terracotta</groupId>
      <artifactId>${toolkit.artifactId}</artifactId>
      <version>${toolkit.version}</version>
      <scope>provided</scope>
    </dependency>       
    
    <!-- ehcache -->
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>${ehcache-core.artifactId}</artifactId>
      <version>${ehcache.version}</version>
      <classifier>distribution</classifier>
      <type>tar.gz</type>
      <scope>provided</scope>
    </dependency>     
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>${ehcache-terracotta.artifactId}</artifactId>
      <version>${ehcache.version}</version>
      <scope>provided</scope>
    </dependency>    
    <dependency>
      <groupId>org.terracotta.samples.ehcache</groupId>
      <artifactId>colorcache</artifactId>
      <version>${project.version}</version>
      <classifier>distribution</classifier>
      <type>tar.gz</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.terracotta.samples.ehcache.hibernate</groupId>
      <artifactId>events</artifactId>
      <version>${project.version}</version>
      <classifier>distribution</classifier>
      <type>tar.gz</type>
      <scope>provided</scope>
    </dependency>

    <!-- quartz -->
    <dependency>
      <groupId>org.terracotta.quartz</groupId>
      <artifactId>${quartz-terracotta.artifactId}</artifactId>
      <version>${quartz-terracotta.version}</version>
      <scope>provided</scope>
    </dependency>
    
    <!-- express session -->
    <dependency>
      <groupId>org.terracotta.session</groupId>
      <artifactId>terracotta-session</artifactId>
      <version>${terracotta-session.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
      
  <build>
    <plugins>
      <!-- generate schema -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2</version>
          <executions>
            <execution>
              <id>generate-schema</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>exec</goal>
              </goals>
              <configuration>
                <skip>${skip.schema}</skip>
                <executable>${java.home}/bin/java</executable>
                <arguments>
                  <argument>-Xmx512m</argument>
                  <argument>-cp</argument>
                  <argument>${env.DOCFLEX_HOME}/lib/docflex-xml-re.jar${path.separator}${env.DOCFLEX_HOME}/lib/resolver.jar${path.separator}${env.DOCFLEX_HOME}/lib/xercesImpl.jar${path.separator}${env.DOCFLEX_HOME}/lib/xml-apis.jar</argument>
                  <argument>com.docflex.xml.Generator</argument>
                  <argument>-template</argument>
                  <argument>${env.DOCFLEX_HOME}/templates/XSDDoc/FramedDoc.tpl</argument>
                  <argument>-format</argument>
                  <argument>HTML</argument>
                  <argument>-p:docTitle=\"Terracotta Configuration Schema Version ${schema.version}\"</argument>
                  <argument>-d</argument>
                  <argument>${project.build.directory}/schema</argument>
                  <argument>-f</argument>
                  <argument>index.html</argument>
                  <argument>-nodialog=true</argument>
                  <argument>-quiet=true</argument>
                  <argument>-launchviewer=false</argument>
                  <argument>${basedir}/../tcconfig/src/main/xsd/terracotta-${schema.version}.xsd</argument>
                </arguments>
              </configuration> 
            </execution> 
          </executions>        
      </plugin>     
      <plugin>
        <groupId>com.goldin.plugins</groupId>
        <artifactId>maven-copy-plugin</artifactId>
        <version>0.2.3</version>
        <configuration>
          <groovyConfig>
            <classpath>${project.basedir}/src/scripts</classpath>
          </groovyConfig>        
          <verbose>false</verbose>
          <resources>
            <!-- prepare skeleton structure of the kit -->
            <resource>
              <targetPath>${rootDir}</targetPath>
              <directory>${basedir}/src/packaging</directory>
              <preservePath>true</preservePath>
            </resource>
            <resource>
              <runIf>{{ "${kit.edition}" == "enterprise" }}</runIf>
              <targetPath>${rootDir}</targetPath>
              <directory>${basedir}/src/enterprise-packaging</directory>
              <preservePath>true</preservePath>
            </resource>

            <!-- schema -->
            <resource>
              <targetPath>${rootDir}/config-samples/schema</targetPath>
              <directory>${basedir}/target/schema</directory>
              <preservePath>true</preservePath>
			  <failIfNotFound>false</failIfNotFound>
            </resource>            
            <resource>
              <targetPath>${rootDir}/config-samples/schema</targetPath>
			  <file>${basedir}/../tcconfig/src/main/xsd/terracotta-${schema.version}.xsd</file>
            </resource>            
            
            <!-- populate lib folder -->
            <resource>
              <targetPath>${rootDir}/lib</targetPath>
              <dependency>
                <excludeScope>provided</excludeScope>
                <excludeArtifactIds>${terracotta.artifactId},build-data,thirdparty-api,dso-cluster-api,stax-api</excludeArtifactIds>
              </dependency>
              <dependenciesAtM2>true</dependenciesAtM2>
            </resource>
            
            <!-- remove build-data.txt from terracotta jar -->
            <resource>
              <targetPath>${rootDir}/lib</targetPath>
              <dependency>
                <groupId>org.terracotta</groupId>
                <artifactId>${terracotta.artifactId}</artifactId>
              </dependency>
              <process>{{ ('zip -d ' + files.first() + ' build-data.txt').execute().text }}</process>
            </resource>
            
            <!-- build data -->
            <resource>
              <targetPath>${rootDir}/lib/resources</targetPath>
              <dependency>
                <groupId>org.terracotta.internal</groupId>
                <artifactId>build-data</artifactId>
              </dependency>
              <zipEntries>
                <zipEntry>build-data.txt</zipEntry>
                <zipEntry>tim-get.properties</zipEntry>
              </zipEntries>
              <unpack>true</unpack>              
            </resource>
            
            <!-- tookit -->
            <resource>
              <targetPath>${rootDir}/common</targetPath>
              <dependency>
                <groupId>org.terracotta</groupId>
                <artifactId>${toolkit.artifactId}</artifactId>
              </dependency>            
            </resource>
            <resource>
              <targetPath>${rootDir}/common/docs/javadoc</targetPath>
              <dependency>
                <groupId>org.terracotta</groupId>
                <artifactId>${toolkit.artifactId}</artifactId>
                <classifier>javadoc</classifier>
              </dependency>
              <unpack>true</unpack>
            </resource>            
            
            <!-- ehcache-core -->
            <resource>
              <targetPath>${rootDir}</targetPath>
              <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>${ehcache-core.artifactId}</artifactId>
                <classifier>distribution</classifier>
                <type>tar.gz</type>
              </dependency>
              <dependenciesAtM2>true</dependenciesAtM2>
              <unpack>true</unpack>
              <process>{{
              def rootEhcacheFolder = "/ehcache-core-${ehcache.version}"
              if ("${kit.edition}" == 'enterprise') {
                rootEhcacheFolder = "/ehcache-core-ee-${ehcache.version}"
              }
              def rootDir = project.properties['rootDir']
              def currentName =  rootDir + rootEhcacheFolder
              def newName = rootDir  + "/ehcache"
              Util.rename(currentName, newName) 
              }}
              </process>              
            </resource>
            <resource>
              <directory>${rootDir}/ehcache</directory>
              <include>**/SLF4J-LICENSE.txt,**/TERRACOTTA-TRIAL-LICENSE.txt,**/SUBSCRIPTION-AGREEMENT.pdf</include>
              <clean>true</clean>
            </resource>
            <resource>
              <targetPath>${rootDir}/ehcache</targetPath>
              <file>${ehcache-core.readme.url}</file>
            </resource>
            <resource>
              <targetPath>${rootDir}/ehcache</targetPath>
              <file>${ehcache-core.quickstart.url}</file>
            </resource>
            <resource>
              <targetPath>${rootDir}/ehcache</targetPath>
              <file>${ehcache-core.tcschema.url}</file>
              <destFileName>ehcache.xml</destFileName>
            </resource>
            <resource>
              <targetPath>${rootDir}/ehcache/licenses</targetPath>
              <file>${ehcache-core.tclicense.url}</file>
            </resource>            
            
            <!-- ehcache terracotta -->
            <resource>
              <targetPath>${rootDir}/ehcache/lib</targetPath>
              <dependencies>
                <dependency>
                  <groupId>net.sf.ehcache</groupId>
                  <artifactId>${ehcache-terracotta.artifactId}</artifactId>
                </dependency>
              </dependencies>
            </resource>
            
            <!-- ehcache samples-->
            <resource>
              <targetPath>${rootDir}/ehcache/samples</targetPath>
              <dependencies>
                <dependency>
                  <groupId>org.terracotta.samples.ehcache</groupId>
                  <artifactId>colorcache</artifactId>
                  <classifier>distribution</classifier>
                  <type>tar.gz</type>
                </dependency>
                <dependency>
                  <groupId>org.terracotta.samples.ehcache.hibernate</groupId>
                  <artifactId>events</artifactId>
                  <classifier>distribution</classifier>
                  <type>tar.gz</type>
                </dependency>
              </dependencies>
              <unpack>true</unpack>
            </resource>             
            
            <!-- session express -->
            <resource>
              <targetPath>${rootDir}/sessions</targetPath>
              <dependency>
                <groupId>org.terracotta.session</groupId>
                <artifactId>terracotta-session</artifactId>
              </dependency>
            </resource>
            
            <!-- quartz -->
            <resource>
              <targetPath>${rootDir}</targetPath>
              <file>${quartz-kit.url}</file>
              <unpack>true</unpack>
              <process>{{
              def rootDir = project.properties['rootDir']
              def currentName =  rootDir + "/quartz-${quartz.version}"
              def newName = rootDir  + "/quartz"
              Util.rename(currentName, newName)
              if ("${kit.edition}" == "enterprise") {
                def ant = new AntBuilder()
                ant.replace(dir: newName, includes: "**/example15/instance*.properties", 
                            token: "TerracottaJobStore", value: "EnterpriseTerracottaJobStore")
              }
              }}
              </process>
            </resource>
            <resource>
              <targetPath>${rootDir}/quartz</targetPath>
              <dependency>
                <groupId>org.terracotta.quartz</groupId>
                <artifactId>${quartz-terracotta.artifactId}</artifactId>
              </dependency>
            </resource>
            
            <!-- package tar.gz kit -->
            <resource>
              <runIf>{{ "${packaging}" == "tarball" }}</runIf>
              <targetPath>${rootDir}.tar.gz</targetPath>
              <directory>${project.build.directory}</directory>
              <include>${kit.name}/**</include>
              <pack>true</pack>
            </resource>
          </resources>
        </configuration>
        <executions>
          <execution>
            <id>packaging-terracotta-kit</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
      

</project>
